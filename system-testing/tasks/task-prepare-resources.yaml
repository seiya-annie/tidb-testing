apiVersion: tekton.dev/v1beta1
kind: Task
metadata:
  name: systesting-prepare-env
spec:
  params:
    - name: run-id
      type: string
    - name: init-version
      type: string
  workspaces:
  - name: manifest
    mountPath: /adhoc-manifests
  steps:
  - name: generate-manifest
    image: hub.pingcap.net/qa/kubetools:20200730
    script: |
      #!/usr/bin/env bash
      echo "generating resources manifest..."
      cat <<EOF > "$(workspaces.manifest.path)/resources.yaml"
      apiVersion: naglfar.pingcap.com/v1
      kind: TestResourceRequest
      metadata:
        name: $(params.run-id)
      spec:
        machines:
           - name: m1
        items:
          - name: ctl
            spec:
              machine: m1
              memory: 64GB
              cores: 32
              disks:
                disk1:
                  kind: nvme
                  size: 50GB
                  mountPath: /disks1
          - name: workload
            spec:
              machine: m1
              memory: 4GB
              cores: 2
          - name: workload2
            spec:
              machine: m1
              memory: 4GB
              cores: 2
      EOF
      echo "generating resources manifest...done"
      cat "$(workspaces.manifest.path)/resources.yaml"

      echo "generating cluster manifest..."
      cat <<EOF > "$(workspaces.manifest.path)/cluster.yaml"
      apiVersion: naglfar.pingcap.com/v1
      kind: TestClusterTopology
      metadata:
        name: $(params.run-id)
      spec:
        resourceRequest: $(params.run-id)
        tidbCluster:
          global:
            deployDir: "/disks1/deploy"
            dataDir: "/disks1/data"
          version:
            version: $(params.init-version)
          control: ctl
          tikv:
            - host: ctl
              port: 20160
              statusPort: 20180
              deployDir: /disk1/deploy/tikv-20160
              dataDir: /disk1/data/tikv-20160
              logDir: /disk1/deploy/tikv-20160/log
          tidb:
            - host: ctl
          pd:
            - host: ctl
          tiflash:
            - host: ctl
          monitor:
            - host: ctl
          grafana:
            - host: ctl
          alertmanager:
            - host: ctl
      EOF
      echo "generating cluster manifest...done"
      cat "$(workspaces.manifest.path)/cluster.yaml"
  - name: apply-resources
    image: hub.pingcap.net/qa/kubetools:20200730
    script: |
      #!/usr/bin/env bash
      kubectl apply -f "$(workspaces.manifest.path)/resources.yaml"
      kubectl apply -f "$(workspaces.manifest.path)/cluster.yaml"
  - name: wait-until-cluster-started
    image: hub.pingcap.net/qa/kubetools:20200730
    script: |
      #!/usr/bin/env bash
      while true
      do
        state=`kubectl get tct "$(params.run-id)" -ojsonpath='{.status.state}' || echo unknown`
        echo "current resource state: $state"
        if [ "ready" = "$state" ]; then
            break
        fi
        echo "test resources isn't ready now, wait another 10s..."
        sleep 10
      done